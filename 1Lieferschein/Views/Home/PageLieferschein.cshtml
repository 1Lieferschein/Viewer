@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
  
    DateTime issueDate = (Model.IssueDate);
    string IssueDate = issueDate.ToString("dd.MM.yyyy");

    DateTime issueTime = (Model.IssueTime);
    string IssueTime = issueTime.ToString("HH.mm");


   }

@model _1Lieferschein.Models.DeliveryNotes.DespatchAdvice


<dl class="row border-bottom">

    <dt class="col-sm-3">
        Standardidentifikation
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.CustomizationID)
    </dd>

    <dt class="col-sm-3">
        Profiltyp
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.ProfileID)
    </dd>

    <dt class="col-sm-3">
        Bemerkung
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Note)
    </dd>

</dl>


@*Header*@
<h5>Kopf</h5> 
<dl class="row border-bottom">

    <dt class="col-sm-3">
        Unique Lieferschein ID
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.UUID)
    </dd>

    @foreach (var orderReference in Model.OrderReference)
    {
        <dt class="col-sm-3">
            Auftragsnummer            
        </dt>
        <dd class="col-sm-9">
            @orderReference.ID<br />
            @orderReference.SalesOrderID
        </dd>
    }
  

    <dt class="col-sm-3">
        Datum Lieferschein
    </dt>
    <dd class="col-sm-9">
        @IssueDate
    </dd>

    <dt class="col-sm-3">
        Uhrzeit
    </dt>
    <dd class="col-sm-9">
        @IssueTime
    </dd>

</dl>


@*SignatoryParty*@
<h5>Ersteller</h5>
<dl class="row border-bottom">

    <dt class="col-sm-3">
        Name (inkl. Firmierung)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PartyLegalEntity.RegistrationName)
    </dd>

    <dt class="col-sm-3">
        Adresse
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.StreetName)
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.BuildingNumber)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.PostalZone)
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.CityName)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.CountrySubentityCode)
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.CountrySubentity)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.TimezoneOffset)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.Country.IdentificationCode)
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.Country.Name)<br/>
        @Html.DisplayFor(model => model.Signature.SignatoryParty.PostalAddress.LocationCoordinate)
    </dd>

    <dt class="col-sm-3">
        Website
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Signature.SignatoryParty.WebsiteURI)
    </dd>

    @if (Model.Signature.SignatoryParty.PartyIdentification != null)
    {
        @foreach (var partyIdentification in Model.Signature.SignatoryParty.PartyIdentification)
        {
            <dt class="col-sm-3">
                Identifikator
            </dt>
            <dd class="col-sm-9">
                @partyIdentification.ID
            </dd>
        }
    }else
    {
        <dt class="col-sm-3">
            Identifikator
        </dt>
        <dd class="col-sm-9"></dd>
    }


    <dt class="col-sm-3">
        Sprache
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Language)
    </dd>

    <dt class="col-sm-3">
        Kontakt
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Contact.ID)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.Signature.SignatoryParty.Contact.Telephone)<br />
        Fax: @Html.DisplayFor(model => model.Signature.SignatoryParty.Contact.Telefax)<br />
        E-Mail: @Html.DisplayFor(model => model.Signature.SignatoryParty.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Contact.Note)<br />
        Andere Kommunikationsmöglichkeiten: <br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Contact.OtherCommunication.Channel)<br /> 
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Contact.OtherCommunication.Value)<br />
    </dd>

    <dt class="col-sm-3">
        Person
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.Title)
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.FirstName)
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.FamilyName)<br />        
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.JobTitle)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.NationalityID)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.GenderCode)<br />
        <br />

        Kontaktdaten der Person:<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.Contact.Telephone)<br />
        E-Mail: @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.Signature.SignatoryParty.Person.Contact.Note)<br />        
    </dd>

</dl>


@*SellerSupplierParty*@
<h5>Verkäufer</h5> 
<dl class="row border-bottom">

    <dt class="col-sm-3">
        Name (inkl. Firmierung)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PartyLegalEntity.RegistrationName)
    </dd>

    <dt class="col-sm-3">
        Mandant
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DeliveryCustomerParty.CustomerAssignedAccountID)
    </dd>

    <dt class="col-sm-3">
        Standort
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Standortnummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Adresse
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.StreetName)
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.BuildingNumber)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.PostalZone)
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.CityName)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.CountrySubentityCode)
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.CountrySubentity)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.TimezoneOffset)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.Country.IdentificationCode)
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.Country.Name)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.PostalAddress.LocationCoordinate)
    </dd>

    <dt class="col-sm-3">
        Website
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.WebsiteURI)
    </dd>

    @if (Model.SellerSupplierParty.Party.PartyIdentification != null)
    {
        @foreach (var partyIdentification in Model.SellerSupplierParty.Party.PartyIdentification)
        {
            <dt class="col-sm-3">
                Identifikator
            </dt>
            <dd class="col-sm-9">
                @partyIdentification.ID
            </dd>
        }
    }
    else
    {
        <dt class="col-sm-3">
            Identifikator
        </dt>
        <dd class="col-sm-9"></dd>
    }

    <dt class="col-sm-3">
        Sprache
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Language)
    </dd>

    <dt class="col-sm-3">
        Kontakt
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Contact.ID)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.SellerSupplierParty.Party.Contact.Telephone)<br />
        Fax: @Html.DisplayFor(model => model.SellerSupplierParty.Party.Contact.Telefax)<br />
        E-Mail: @Html.DisplayFor(model => model.SellerSupplierParty.Party.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Contact.Note)<br />
        Andere Kommuniktinsmöglichhkeiten: <br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Contact.OtherCommunication.Channel)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Contact.OtherCommunication.Value)<br />
    </dd>

    <dt class="col-sm-3">
        Person
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.Title)
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.FirstName)
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.FamilyName)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.JobTitle)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.NationalityID)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.GenderCode)<br />
        <br />

        Kontaktdaten der Person:<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.Contact.Telephone)<br />
        E-Mail: @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.SellerSupplierParty.Party.Person.Contact.Note)<br />

       
    </dd>

</dl>


@*DespatchSupplierParty.Party*@
<h5>Versender</h5>
<dl class="row border-bottom">

    <dt class="col-sm-3">
        Name (inkl. Firmierung)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PartyLegalEntity.RegistrationName)
    </dd>

    <dt class="col-sm-3">
        Kostenstellennummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Debitor
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Externe Dokumente
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Standort
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Standortnummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Adresse
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.StreetName)
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.BuildingNumber)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.PostalZone)
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.CityName)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.CountrySubentityCode)
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.CountrySubentity)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.TimezoneOffset)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.Country.IdentificationCode)
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.Country.Name)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.PostalAddress.LocationCoordinate)
    </dd>

    <dt class="col-sm-3">
        Website
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.WebsiteURI)
    </dd>

    @if (Model.DespatchSupplierParty.Party.PartyIdentification != null)
    {
        @foreach (var partyIdentification in Model.DespatchSupplierParty.Party.PartyIdentification)
        {
            <dt class="col-sm-3">
                Identifikator
            </dt>
            <dd class="col-sm-9">
                @partyIdentification.ID
            </dd>
        }
    }
    else
    {
        <dt class="col-sm-3">
            Identifikator
        </dt>
        <dd class="col-sm-9"></dd>
    }

    <dt class="col-sm-3">
        Sprache
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Language)
    </dd>

    <dt class="col-sm-3">
        Kontakt
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Contact.ID)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Contact.Telephone)<br />
        Fax: @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Contact.Telefax)<br />
        E-Mail: @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Contact.Note)<br />
        Andere Kommunikationsmöglichkeiten:<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Contact.OtherCommunication.Channel)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Contact.OtherCommunication.Value)<br />
    </dd>

    <dt class="col-sm-3">
        Person
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.Title)
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.FirstName)
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.FamilyName)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.JobTitle)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.NationalityID)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.GenderCode)<br />
        <br />

        Kontaktdaten der Person: <br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.Contact.Telephone)<br />
        E-Mail: @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.DespatchSupplierParty.Party.Person.Contact.Note)<br />

        
    </dd>

</dl>


@*BuyerCustomerParty.Party*@
<h5>Käufer</h5> 
<dl class="row border-bottom">

    <dt class="col-sm-3">
        Name (inkl. Firmierung)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PartyLegalEntity.RegistrationName)
    </dd>

    <dt class="col-sm-3">
        Debitorennummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Standort
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Standortnummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Adresse
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.StreetName)
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.BuildingNumber)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.PostalZone)
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.CityName)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.CountrySubentityCode)
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.CountrySubentity)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.TimezoneOffset)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.Country.IdentificationCode)
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.Country.Name)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.PostalAddress.LocationCoordinate)
    </dd>

    <dt class="col-sm-3">
        Website
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.WebsiteURI)
    </dd>

    @if (Model.BuyerCustomerParty.Party.PartyIdentification != null)
    {
        @foreach (var partyIdentification in Model.BuyerCustomerParty.Party.PartyIdentification)
        {
            <dt class="col-sm-3">
                Identifikator
            </dt>
            <dd class="col-sm-9">
                @partyIdentification.ID
            </dd>
        }
    }
    else
    {
        <dt class="col-sm-3">
            Identifikator
        </dt>
        <dd class="col-sm-9"></dd>
    }

    <dt class="col-sm-3">
        Sprache
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Language)
    </dd>

    <dt class="col-sm-3">
        Kontakt
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Contact.ID)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Contact.Telephone)<br />
        Fax: @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Contact.Telefax)<br />
        E-Mail: @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Contact.Note)<br />
        Andere Kommunikationsmöglichkeiten:<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Contact.OtherCommunication.Channel)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Contact.OtherCommunication.Value)<br />
    </dd>

    <dt class="col-sm-3">
        Person
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.Title)
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.FirstName)
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.FamilyName)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.JobTitle)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.NationalityID)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.GenderCode)<br />
        <br />

        Kontaktdaten der Person:<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.Contact.Telephone)<br />
        E-Mail: @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.BuyerCustomerParty.Party.Person.Contact.Note)<br />

    </dd>

</dl>


@*DeliveryCustomerParty.Party*@
<h5>Empfänger</h5> 
<dl class="row border-bottom">
    
    <dt class="col-sm-3">
        Name (inkl. Firmierung)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PartyLegalEntity.RegistrationName)
    </dd>

    <dt class="col-sm-3">
        Kostenstellennummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Externe Dokumente
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Standort
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Standortnummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Adresse
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.StreetName)
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.BuildingNumber)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.PostalZone)
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.CityName)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.CountrySubentityCode)
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.CountrySubentity)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.TimezoneOffset)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.Country.IdentificationCode)
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.Country.Name)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.PostalAddress.LocationCoordinate)
    </dd>

    <dt class="col-sm-3">
        Website
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.WebsiteURI)
    </dd>

    @if (Model.DeliveryCustomerParty.Party.PartyIdentification != null)
    {
        @foreach (var partyIdentification in Model.DeliveryCustomerParty.Party.PartyIdentification)
        {
            <dt class="col-sm-3">
                Identifikator
            </dt>
            <dd class="col-sm-9">
                @partyIdentification.ID
            </dd>
        }
    }
    else
    {
        <dt class="col-sm-3">
            Identifikator
        </dt>
        <dd class="col-sm-9"></dd>
    }

    <dt class="col-sm-3">
        Sprache
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Language)
    </dd>

    <dt class="col-sm-3">
        Kontakt
    </dt>
    <dd class="col-sm-9">
        @*@Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Contact.ID)<br />*@
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Contact.Telephone)<br />
        Fax: @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Contact.Telefax)<br />
        E-Mail: @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Contact.Note)<br />
        Andere Kommunikationsmöglichkeiten:<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Contact.OtherCommunication.Channel)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Contact.OtherCommunication.Value)<br />
    </dd>

    <dt class="col-sm-3">
        Person
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.Title)
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.FirstName)
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.FamilyName)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.JobTitle)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.NationalityID)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.GenderCode)<br />
        <br />

        Kontaktdaten der Person:<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.Contact.Telephone)<br />
        E-Mail: @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.DeliveryCustomerParty.Party.Person.Contact.Note)<br />

    </dd>

</dl>


@*ConsigneeParty*@
<h5>Empfangsstelle</h5>
<dl class="row border-bottom">

    <dt class="col-sm-3">
        Name (inkl. Firmierung)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PartyLegalEntity.RegistrationName)
    </dd>

    <dt class="col-sm-3">
        Kostenstellennummer des Verkäufers
    </dt>
    <dd class="col-sm-9">
    </dd>

    <dt class="col-sm-3">
        Kostenstellennummer des Käufers
    </dt>
    <dd class="col-sm-9">
    </dd>

    <dt class="col-sm-3">
        Externe Dokumente
    </dt>
    <dd class="col-sm-9">
    </dd>

    <dt class="col-sm-3">
        Standort
    </dt>
    <dd class="col-sm-9">
    </dd>

    <dt class="col-sm-3">
        Standortnummer
    </dt>
    <dd class="col-sm-9">
    </dd>

    <dt class="col-sm-3">
        Adresse
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.StreetName)
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.BuildingNumber)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.PostalZone)
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.CityName)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.CountrySubentityCode)
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.CountrySubentity)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.TimezoneOffset)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.Country.IdentificationCode)
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.Country.Name)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.PostalAddress.LocationCoordinate)
    </dd>

    <dt class="col-sm-3">
        Website
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.WebsiteURI)
    </dd>

    @* @if (Model.Shipment.Consignment.ConsigneeParty.PartyIdentification != null)
    {
        @foreach (var partyIdentification in Model.Shipment.Consignment.ConsigneeParty.PartyIdentification)
        {
            <dt class="col-sm-3">
                Identifikator
            </dt>
            <dd class="col-sm-9">
                @partyIdentification.ID
            </dd>
        }
    }
    else
    {
        <dt class="col-sm-3">
            Identifikator
    </dt>
    <dd class="col-sm-9"></dd>
    } *@

    <dt class="col-sm-3">
        Sprache
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Language)
    </dd>

    <dt class="col-sm-3">
        Kontakt
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Contact.ID)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Contact.Telephone)<br />
        Fax: @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Contact.Telefax)<br />
        E-Mail: @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Contact.Note)<br />
        Andere Kommunikationsmöglichkeiten:<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Contact.OtherCommunication.Channel)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Contact.OtherCommunication.Value)<br />
    </dd>

    <dt class="col-sm-3">
        Person
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.Title)
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.FirstName)
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.FamilyName)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.JobTitle)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.NationalityID)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.GenderCode)<br />
        <br />

        Kontaktdaten der Person:<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.Contact.Name)<br />
        Tel.:@Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.Contact.Telephone)<br />
        E-Mail: @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.Shipment.Consignment.ConsigneeParty.Person.Contact.Note)<br />
    </dd>

</dl>


@*Shipmentstage.CarrierParty*@
<h5>Transportuer</h5>
<dl class="row border-bottom">

    <dt class="col-sm-3">
        Name (inkl. Firmierung)
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PartyLegalEntity.RegistrationName)
    </dd>

    <dt class="col-sm-3">
        Standort
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Standortnummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Fahrzeug Nummer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Abholer
    </dt>
    <dd class="col-sm-9">
        @*fehlt*@
    </dd>

    <dt class="col-sm-3">
        Adresse
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.StreetName)
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.BuildingNumber)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.PostalZone)
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.CityName)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.CountrySubentityCode)
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.CountrySubentity)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.TimezoneOffset)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.Country.IdentificationCode)
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.Country.Name)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.PostalAddress.LocationCoordinate)
    </dd>

    <dt class="col-sm-3">
        Website
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.WebsiteURI)
    </dd>

   @*  @if (Model.Shipment.ShipmentStage.CarrierParty.PartyIdentification != null)
    {
        @foreach (var partyIdentification in Model.Shipment.ShipmentStage.CarrierParty.PartyIdentification)
        {
            <dt class="col-sm-3">
                Identifikator
            </dt>
            <dd class="col-sm-9">
                @partyIdentification.ID
            </dd>
        }
    }
    else
    {
        <dt class="col-sm-3">
            Identifikator
        </dt>
    </dt>
    <dd class="col-sm-9"></dd>
    } *@

    <dt class="col-sm-3">
        Sprache
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Language)
    </dd>

    <dt class="col-sm-3">
        Kontakt
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Contact.ID)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Contact.Telephone)<br />
        Fax: @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Contact.Telefax)<br />
        E-Mail: @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Contact.Note)<br />
        Andere Kommunikationsmöglichkeiten:<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Contact.OtherCommunication.Channel)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Contact.OtherCommunication.Value)<br />
    </dd>

    <dt class="col-sm-3">
        Person
    </dt>
    <dd class="col-sm-9">
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.Title)
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.FirstName)
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.FamilyName)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.JobTitle)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.NationalityID)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.GenderCode)<br />
        <br />

        Kontaktdaten der Person:<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.Contact.Name)<br />
        Tel.: @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.Contact.Telephone)<br />
        E-Mail: @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.Contact.ElectronicMail)<br />
        @Html.DisplayFor(model => model.Shipment.ShipmentStage.CarrierParty.Person.Contact.Note)<br />

    </dd>

</dl>


@*DespatchLine*@
<h5>Lieferpositionen</h5>
@foreach (var despatchLine in Model.DespatchLine)
{
    <dl class="row border-bottom">
        <dt class="col-sm-3">
            Lieferposition Nr.
        </dt>
        <dd class="col-sm-9">
            @despatchLine.OrderLineReference.LineID
        </dd>

        <dt class="col-sm-3">
            Anzahl Menge
        </dt>
        <dd class="col-sm-9">
            @despatchLine.DeliveredQuantity
        </dd>

        <dt class="col-sm-3">
            Einheit
        </dt>
        <dd class="col-sm-9">
            @despatchLine.Item.PackQuantity
        </dd>

        <dt class="col-sm-3">
            Nummer
        </dt>
        <dd class="col-sm-9">
            @despatchLine.Item.SellersItemIdentification.ID
        </dd>

        <dt class="col-sm-3">
            Bezeichnung
        </dt>
        <dd class="col-sm-9">
            @despatchLine.Item.Description
        </dd>

        @*<dt class="col-sm-3">
            Artikeleigenschaft
        </dt>
        <dd class="col-sm-9">
            @despatchLine.Item.AdditionalItemProperty
        </dd>*@

    </dl>
}


@*Unknown Elements*@
<h5>Vom Standard abweichende Informationen</h5>
<p>Im Folgenden werden Elemente aufgelistet, die im 1Lieferschein enthalten sind, jedoch nicht dem Standard entsprechen:</p>
@foreach (var unknonwElem in Model.unknownInformation)
{
  <dl>        
    <dd>
        @unknonwElem<br>
    </dd>
</dl>  
}